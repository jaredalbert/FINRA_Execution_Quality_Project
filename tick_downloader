from ibapi.client import EClient
from ibapi.wrapper import EWrapper
from ibapi.contract import Contract
from ibapi.ticktype import TickTypeEnum
from threading import Timer
import time


class TestApp(EWrapper, EClient):
    def __init__(self):
        EClient.__init__(self, self)
    
    def stop(self):
        self.done = True
        self.disconnect()


    def error(self, reqId, errorCode, errorString):
        print("Error: ", reqId, " ", errorCode, " ", errorString)

    def tickPrice(self, reqId, tickType, price, attrib):
        print("Tick Price. Ticker Id:", reqId, "tickType:", TickTypeEnum.to_str(tickType), "Price:", price, end=' ')

    def tickSize(self, reqId, tickType, size):
        print("Tick Size. Ticker Id:", reqId, "tickType:", TickTypeEnum.to_str(tickType), "Size:", size)
    
   
            
        
def main():
    app = TestApp()

    app.connect("127.0.0.1", 7497, 0)
    time.sleep(2)
    Timer(3, app.stop).start()
    contract = Contract()
    contract.symbol = "refr"
    contract.secType = "STK"
    contract.exchange = "SMART"
    contract.currency = "USD"
    contract.primaryExchange = "NASDAQ"
    
    app.reqHistoricalTicks(18024, contract,
    "20221111 09:39:33 US/Eastern", "", 10, "BID_ASK", 1, True, [])
    app.reqHistoricalTicks(18025, contract,
    "20221111 09:39:33 US/Eastern", "", 10, "TRADES", 1, True, [])
    #app.historicalTicks(18005, 10, True)
    #app.historicalTicksBidAsk(18005, 10, True)

    #print(f'done {ticks}')

    app.run()


if __name__ == "__main__":
    main()